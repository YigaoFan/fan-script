{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Fan",
	"patterns": [
		{
			"include": "#function"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.fan",
				"match": "\\b(if|while|for|return|switch)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.fan",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.fan",
					"match": "\\\\."
				}
			]
		},
		"letter": {
			"match": "[a-zA-Z]",
			"name": "keyword.letter"
		},
		"expression": {
			"patterns": [{ "include": "#letter"	}, { "include": "#paren-expression"	}]
		},
		"function": {
			"patterns": [
				{
					"name": "storage.type.function.fan",
					"match": "\\bfunction\\b"
				},
				{ "include": "#identifier" },
				{ "include": "#paren-expression" },
				{ "include": "#brace-body" }
			],
			"repository": {
				"identifier": {
					"name": "entity.name.function.fan",
					"match": "\\b[a-zA-Z]([a-z]|[A-Z]|[0-9]|_)*\\b"
				},
				"paren-expression": {
					"begin": "\\(",
					"end": "\\)",
					"beginCaptures": {
						"0": {
							"name": "punctuation.paren.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.paren.close"
						}
					},
					"name": "expression.group.fan",
					"patterns": [
						{
							"include": "#expression"
						}
					]
				},
				"brace-body": {
					"begin": "\\{",
					"end": "\\}",
					"beginCaptures": {
						"0": {
							"name": "punctuation.brace.open"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.brace.close"
						}
					},
					"name": "punctuation.definition.block.fan",
					"patterns": [
						
					]
				}
			}
		}
	},
	"scopeName": "source.fan"
}